import java.util.*;

public class Greedy {
	public static void main(String args[]) {
//		int start[] = {1, 3, 0, 5, 8, 5};
//		int end[] = {2, 4, 6, 7, 9, 9};
//		
//		int activities[][] = new int[start.length][3];
//		
//		for(int i=0; i<start.length; i++) {
//			activities[i][0] = i;
//			activities[i][1] = start[i];
//			activities[i][2] = end[i];
//		}
//		
//		Arrays.sort(activities, Comparator.comparingDouble(o -> o[2]));
//		
//		int ans = 0;
//		ArrayList<Integer> list = new ArrayList<>();
//		list.add(activities[0][0]);
//		ans = 1;
//		int lastEnd = activities[0][2];
//		
//		for(int i=1; i<end.length; i++) {
//			if(activities[i][1] >= lastEnd) {
//				ans++;
//				list.add(activities[i][0]);
//				lastEnd = activities[i][2];
//			}
//		}
//		
//		System.out.println("Total max activities " + ans);
//		for(int i=0; i<list.size(); i++) {
//			System.out.print(list.get(i) + " ");
//		}
//		System.out.println();
		
//		int val[] = {60, 100, 120};
//		int wt[] = {10, 20, 30};
//		int W = 50;
//		
//		double ratio[][] = new double[val.length][2];
//		
//		for(int i=0; i<val.length; i++) {
//			ratio[i][0] = i;
//			ratio[i][1] = val[i]/(double)wt[i];
//		}
//		
//		Arrays.sort(ratio, Comparator.comparingDouble(o -> o[1]));
//		
//		int maxProfit = 0;
//		int capacity = W;
//		for(int i=val.length-1; i>=0; i--) {
//			int idx = (int)ratio[i][0];
//			if(capacity >= wt[idx]) {
//				capacity -= wt[idx];
//				maxProfit += val[idx];
//			} else {
//				maxProfit += (capacity*ratio[i][1]);
//				capacity = 0;
//				break;
//			}
//		}
//		
//		System.out.println("Max profit = " +maxProfit);
		
		int A[] = {2, 1, 3};
		int B[] = {1, 3 ,2};
		
		Arrays.sort(A);
		Arrays.sort(B);
		
		int maxDiff = 0;
		
		for(int i=0; i<A.length; i++) {
			maxDiff += Math.abs(A[i]-B[i]);
		}
		
		System.out.println(maxDiff);
	}
}