import java.util.*;

public class Greedy {
	public static void main(String args[]) {
//		int start[] = {1, 3, 0, 5, 8, 5};
//		int end[] = {2, 4, 6, 7, 9, 9};
//		
//		int activities[][] = new int[start.length][3];
//		
//		for(int i=0; i<start.length; i++) {
//			activities[i][0] = i;
//			activities[i][1] = start[i];
//			activities[i][2] = end[i];
//		}
//		
//		Arrays.sort(activities, Comparator.comparingDouble(o -> o[2]));
//		
//		int ans = 0;
//		ArrayList<Integer> list = new ArrayList<>();
//		list.add(activities[0][0]);
//		ans = 1;
//		int lastEnd = activities[0][2];
//		
//		for(int i=1; i<end.length; i++) {
//			if(activities[i][1] >= lastEnd) {
//				ans++;
//				list.add(activities[i][0]);
//				lastEnd = activities[i][2];
//			}
//		}
//		
//		System.out.println("Total max activities " + ans);
//		for(int i=0; i<list.size(); i++) {
//			System.out.print(list.get(i) + " ");
//		}
//		System.out.println();
		
		int val[] = {};
		int wt[] = {};
		int W = 50;
		
		double ratio[][] = new double[val.length][2];
		
		for(int i=0; i<val.length; i++) {
			ratio[i][0] = i;
			ratio[i][1] = val[i]/(double)wt[i];
		}
		
		Arrays.sort(ratio, Comparator.comparingDouble(o -> o[1]));
		
		int maxProfit = 0;
		int capacity = W;
		for(int i=0; i<val.length; i++) {
			int idx = (int)ratio[i][0];
			if(capacity >= wt[idx]) {
				capacity -= wt[idx];
				maxProfit += val[idx];
			} else {
				maxProfit += capacity*ratio[idx][1];
				capacity = 0;
				break;
			}
		}
		
		System.out.println("Max profit = " +maxProfit);
	}
}